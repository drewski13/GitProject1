Git
Study Guide

1

Versa what?!

What is version control?
Insurance for when life happens. Important to keep track of your code as it evolves, can track changes and revert if something has gone wrong. Annotate reveisions and group revisions. Can link together with others. 

2

Where the heart is

What is the difference between distributed and centralized version control
systems?
Centralized version control keeps a "central" copy of a project somewhere and all the changes are made to this copy and stored in the same place. Distributed version control allows everyone working on a project to "clone" an entire repository so as to keep the full history of the project on their computer.


3

Versa who?!

What does a version control program do for us?
Version Control allows us to keep a record of all changes made to a project and the differences between the changes made. It also allows teams to collaborate on projects and work independently on their own systems while contributing to the same project with all changes tracked and owners identified. 


4

Committing to git

What is a commit?

5

Checking out git

What is a check out?

6

Itâ€™s like a tree limb

What is a branch?

1

7

The life of a limb

How long are branches in git supposed to exist?

8

Tree growth

How do you create a branch in git?

9

Swinging on a vine

How do you switch branches in git?

10

Taping it together

How do you merge branches in git?

11

Status

How do you check the status of the files you are presently working on?

12

Adding to the chaos

How do you add files to the repository?

13

The main line

What is the name for the primary branch in git?

14

What limb are you on?

How do you check which branch you presently have checked out?

2

15

Git what?!

What is github?

16

We see a need!

Why was git created?

17

A day in the life of git

What is a typical git workflow?

18

Why git?

What makes git different than other version control systems?

19

What were they thinking?!

What were the design criteria for git?

20

Time machine

How do we view the past of a project with git?

21

Commit Comment

How much information, and what kind of information should be in a commit
message?

22

Great Scott!

If there was a mistake made in the past of a project, how should we go about
correcting that mistake?

3
